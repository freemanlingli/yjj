<?xml version="1.0" encoding="UTF-8" ?>

<chapter version="5.0" xmlns="http://docbook.org/ns/docbook">

	<title>service-http</title>
	<sect1>
		<title>控制器的定义方式和关联方式</title>
		<literallayout>
<![CDATA[

$http({method: 'GET', url: '/someUrl'}).
  success(function(data, status, headers, config) {
    // this callback will be called asynchronously
    // when the response is available
  }).
  error(function(data, status, headers, config) {
    // called asynchronously if an error occurs
    // or server returns response with an error status.
  });
快捷调用方法
$http.get
$http.head
$http.post
$http.put
$http.delete
$http.jsonp
$http.patch


php默认就是json请求，比较适合直接调用RESTLET的websercie接口吧，
直接通过JSON进行调用

分析原因，angular的$http.post()方法默认数据传输格式是json的
      post: {'Content-Type': 'application/json;charset=utf-8'},
      put:  {'Content-Type': 'application/json;charset=utf-8'}
所以要修改传输格式


解决方法如下
在angular模块中加入 

php接收端接收到的是json格式的，怎么做的跟Ajax post那样传值呢？
下面的方式是配置成我们传统的ajax请求参数方式
方法1
$http({
     method  : 'POST',
        url     : 'process.php',
        data    : $.param($scope.formData),  // pass in data as strings
       headers : { 'Content-Type': 'application/x-www-form-urlencoded' }  /
    })

方法2
某种自己控制参数的方式修改post方式 form格式传值
angular.module('MyModule', [], function($httpProvider) {//MyModule是你自己的app名称
  // Use x-www-form-urlencoded Content-Type
  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
  $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
 
   
  var param = function(obj) {
    var query = '', name, value, fullSubName, subName, subValue, innerObj, i;
      
    for(name in obj) {
      value = obj[name];
        
      if(value instanceof Array) {
        for(i=0; i
          subValue = value[i];
          fullSubName = name + '[' + i + ']';
          innerObj = {};
          innerObj[fullSubName] = subValue;
          query += param(innerObj) + '&';
        }
      }
      else if(value instanceof Object) {
        for(subName in value) {
          subValue = value[subName];
          fullSubName = name + '[' + subName + ']';
          innerObj = {};
          innerObj[fullSubName] = subValue;
          query += param(innerObj) + '&';
        }
      }
      else if(value !== undefined && value !== null)
        query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';
    }
      
    return query.length ? query.substr(0, query.length - 1) : query;
  };
 
  // Override $http service's default transformRequest
  $httpProvider.defaults.transformRequest = [function(data) {
    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;
  }];
});


	  ]]>
		</literallayout>
	</sect1>




</chapter>
