<?xml version="1.0" encoding="UTF-8" ?>

<chapter version="5.0" xmlns="http://docbook.org/ns/docbook">
	<title>培训常问问题</title>
	<sect1>
		<title>好的老师标准</title>
		<literallayout>
<![CDATA[	  
形式上，
提纲挈领的PPT（幻灯片）将内容要点抽取出来，使大段的文字有了骨架，不再瘫软于纸上，而站立于我们面前；
层次分明，整体感强的板书结构，让流水账式的知识有了逻辑结构，
更易于对知识全貌的理解；
图形和表格结合，
将死的文字变成形象的冲击，经过咀嚼后的知识更易于消化吸收；
多彩的语言，
配合优雅的神态，通过隐喻、类比、拟人、故事、引申等手段将枯燥的知识变得轻松而引人入胜。
技巧
幻灯投影、白板讲解、语言互动、操作演示，丰富的手段将知识的演绎变得活灵活现。


 ]]>
		</literallayout>
	</sect1>


	<sect1>
		<title>视频教学无法取代面授</title>
		<literallayout>
<![CDATA[	  
培训讲师只把1-2个专业方向作为职业发展的主要内容，潜心钻研，深入的理论研究辅以多次的企业实践，及时吸收并理解该
方向领域的新产品、新技术、新理论、以及新的实践成果，从而成为该方向领域名副其实的专家，然后通过培训的手段将该领
域的知识和信息以更具神韵的方式传递给受众来创造价值。因此，传递的知识将是一个面而不是几个点，再将这多个面串成一个
立体的知识结构，给受众更为宏大和深刻的理解。而这些都是只有面对面的培训讲授才能带来的价值。

好的老师带给受众的是该方向领域的思维方法。做网络的，系统的，开发的，数据库的，应用的、安全的、硬件的、管理的……都有该领域特有的学问，都有该领域特有的思维方式。
这种思维方式必须建立在对该领域知识的全面掌握上，这还不够，将知识进一步转化，变成
实践应用的技能，知识才能产生价值。知识理论是基础，而实践应用的需求和环境又是多变的，
这就要求培训要做到授之以“鱼”+授之以“渔”。精心设计的案例既与实际工作贴合，又能给受众以
知识应用技能提升的思维启发。讲师们大胆地进行思想传递与交锋，大胆地提出自己
的见解和建议，大胆地发表个人的喜与恶，并创造一个和谐的争论氛围，给受众以充分地思维启迪。
从而将企业所亟需的广泛而深入的知识和资源，更高价值的解决方案，企业应用的实践成果在这样的氛围中传递给受众。
 ]]>
		</literallayout>
	</sect1>



	<sect1>
		<title>当学员似乎都没在听你的讲课时怎么办？</title>
		<para>
			先采用打比方的方法调节上课气氛，避免讲课内容枯燥。如果不起作用，可以故意讲出错误，
			吸引一部分人的注意，观察对你的错误有反映的人，进而用眼神与之交流，达到与学员沟通的目的。都不管用，就停一停，喝口水或是离开一会儿。
	微软十大金牌讲师亮相 
　　
　　第一名 北京中达金桥科技发展有限公司讲师 贾玄 
　　
　　第二名 上海南洋微电子有限公司讲师 邱传坤 
　　
　　第三名 广州嘉为计算机网络学院讲师 邹方波 
　　
　　第四名 广州嘉为计算机网络学院讲师 崔铁 
　　
　　第五名 南京网博计算机软件系统有限公司讲师 金珑 
　　
　　第六名 北京中达金桥科技发展有限公司讲师 孔文达 
　　
　　第七名 北京护航天地高新技术发展有限公司讲师 徐晓峰 
　　
　　第八名 中国科学院软件研究所讲师 宋靖宇 
　　
　　第九名 广州灵通新技术有限公司讲师 李强 
　　
　　第十名 上海利普计算机有限责任公司讲师 黄丹 		
			
		</para>
		<para>
			手动编写操作DOM元素的代码：操作DOM是AJAX应用很基础的一部分，但它也总是很“笨重”并且容易出错。用声
			明的方式描述的UI界面可随着应用状态的改变而变化，能让你从编写低级的DOM操作代码中解脱出来。绝大部分用AngularJS写的应用里
			，开发者都不用再自己去写操作DOM的代码，不过如果你想的话还是可以去写。
		</para>
		<para>
			对UI界面读写数据：AJAX应用的很大一部是CRUD操作。一个经典的流程是把服务端的数据组建成内部对象，再把对象编成HTML表单，
			用户修改表单后再验证表单，如果有错再显示错误，然后将数据重新组建成内部对象，再返回给服务器。这个流程里有太多太多要重复写的代码，
			使得代码看起来总是在描述应用的全部执行流程，而不是具体的业务逻辑和业务细节。
		</para>
		<para>
			对UI界面读写数据：AJAX应用的很大一部是CRUD操作。一个经典的流程是把服务端的数据组建成内部对象，再把对象编成HTML表单，
			用户修改表单后再验证表单，如果有错再显示错误，然后将数据重新组建成内部对象，再返回给服务器。这个流程里有太多太多要重复写的代码
			，使得代码看起来总是在描述应用的全部执行流程，而不是具体的业务逻辑和业务细节。
		</para>
	
	</sect1>

</chapter>